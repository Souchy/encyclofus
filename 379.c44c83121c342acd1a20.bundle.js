"use strict";(self.webpackChunkencyclofus=self.webpackChunkencyclofus||[]).push([[379],{7958:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(8081),s=i.n(n),a=i(3645),l=i.n(a)()(s());l.push([e.id,'.searchable {\n  width: 100%;\n  float: left;\n}\n.searchable input {\n  width: 100%;\n  /* Safari/Chrome, other WebKit */\n  /* Firefox, other Gecko */\n  box-sizing: border-box;\n  /* Opera/IE 8+ */\n  display: block;\n  background-clip: padding-box;\n  border: 1px solid var(--accent1);\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.searchable dl {\n  width: 90%;\n  position: absolute;\n  display: none;\n  list-style-type: none;\n  border: 1px solid var(--accent1);\n  border-top: none;\n  max-height: 380px;\n  margin: 0;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  padding: 0;\n  background-color: var(--bg0);\n  z-index: 3;\n}\n.searchable dl dt {\n  height: 25px;\n  color: var(--front0);\n  background-color: var(--bg1);\n  z-index: 4;\n}\n.searchable dl dd {\n  height: 25px;\n  cursor: pointer;\n  color: var(--front0);\n  background-color: var(--bg0);\n  z-index: 4;\n  margin: 0px;\n}\n.searchable dl dd.selected {\n  background-color: #e8e8e8;\n  color: #333;\n}\nfilter {\n  padding-top: 0.5rem;\n  padding-left: 10%;\n  padding-right: 10%;\n  display: block;\n}\nfilter > div {\n  /* width: 1200px; */\n  /* height: 300px; */\n  /* background: white; */\n  /* border: 1px solid var(--accent1); */\n}\n/* Search bar */\nfilter .search {\n  width: 100%;\n  height: 40px;\n  padding-left: 5px;\n}\n/* Toggle button */\nfilter .toggle {\n  border: 1px solid var(--accent1);\n  background: transparent;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  padding: 2px;\n  cursor: pointer;\n  text-align: center;\n  min-width: 50px;\n  height: 35px;\n}\nfilter .toggle label {\n  cursor: pointer;\n  margin: 0px;\n}\n/* Checkbox input */\nfilter input[type="checkbox"] {\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\nfilter .checkbox {\n  width: 15px;\n  height: 15px;\n  background: var(--bg0);\n  border: 1px solid var(--accent1);\n  padding: 2px;\n}\nfilter .checkbox:checked {\n  background: var(--accent1);\n}\n/* title labels */\nfilter .title {\n  font-size: 25px;\n  font-weight: bold;\n  /* margin-left: 5px; */\n}\n/* block list */\nfilter .blocklist .block {\n  margin-bottom: 10px;\n}\nfilter .blocklist .block .blocktitle {\n  font-size: 20px;\n  color: var(--front0);\n  background: var(--bg0);\n  border-color: var(--bg0);\n  width: 100%;\n  /* margin-left: 5px; */\n  /* font-weight: bold; */\n}\nfilter .blocklist .block .blocktitle:focus {\n  border-color: var(--bg0) !important;\n}\nfilter .blocklist .block .mod {\n  margin-bottom: 10px;\n  position: relative;\n}\nfilter .btnAdd {\n  width: 100%;\n}\n/* left side */\n.leftside {\n  padding-left: 1px;\n}\n/* right side */\n.rightside {\n  padding-right: 1px;\n}\nfilter .toggle.styleChecked {\n  color: var(--front1);\n  background: var(--accent1);\n}\nfilter .toggle.styleUnchecked {\n  color: var(--front0);\n  background: transparent;\n}\n',""]);const r=l},3368:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(8081),s=i.n(n),a=i(3645),l=i.n(a)()(s());l.push([e.id,".page-host:has(items) {\n  padding-left: 7% !important;\n  padding-right: 7% !important;\n}\n",""]);const r=l},3720:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(8081),s=i.n(n),a=i(3645),l=i.n(a)()(s());l.push([e.id,":root {\n  /* --bg0: #212121; */\n  --bg0: #121212;\n  /* level 0 dark */\n  --bg1: #212121;\n  /* level 1 dark */\n  --front0: rgba(255, 255, 255, 0.87);\n  /* #bdbdbd; /* text on background */\n  --front1: black;\n  /* text on accent */\n  --accent0: #BB86FC;\n  /* purple */\n  --accent1: #03DAC5;\n  /* teal */\n  --accent2: darkred;\n  /* #CF6679; /* red error */\n  --accent1a: rgba(3, 218, 197, 0.5);\n  /* teal with alpha */\n  --shadow: black;\n  --surface: #FFFFFF;\n  --onsurface: #121212;\n  --primarysurface: #3700B3;\n}\nitemsheet {\n  --sheetaccent: var(--accent1);\n  --sheetaccenthover: var(--accent0);\n  width: 250px;\n  min-height: 150px;\n  display: block;\n  cursor: pointer;\n  margin: 5px;\n  padding: 5px;\n  border: 1px solid transparent;\n}\nitemsheet img {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\nitemsheet table {\n  --bs-table-striped-bg: rgba(0, 0, 0, 0) !important;\n}\nitemsheet .title {\n  color: var(--sheetaccent);\n  font-size: 1.1rem;\n}\nitemsheet .weaponConditions {\n  padding-left: 2px;\n  opacity: 0.75;\n}\nitemsheet .weaponEffects {\n  display: block;\n  opacity: 0.75;\n}\nitemsheet .conditions {\n  border-top: 1px dashed var(--sheetaccent);\n  opacity: 0.5;\n}\nitemsheet:hover {\n  border-color: var(--sheetaccenthover);\n}\nitemsheet:hover .title {\n  color: var(--sheetaccenthover);\n}\nitemsheet:hover .conditions {\n  border-color: var(--sheetaccenthover);\n}\nitemsheet:hover .weaponEffects {\n  border-color: var(--sheetaccenthover);\n}\n",""]);const r=l},8247:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(8081),s=i.n(n),a=i(3645),l=i.n(a)()(s());l.push([e.id,"modfilterbox .selected {\n  background-color: red !important;\n}\nmodfilterbox .modsearchinput {\n  position: relative;\n}\nmodfilterbox .modsearchinput input {\n  display: block;\n}\nmodfilterbox .modsearchinput label {\n  pointer-events: none;\n  float: left;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n  padding-left: 3px;\n  padding-top: 2px;\n}\nmodfilterbox .modsearchinput .inputPlaceholder {\n  opacity: 0.5;\n}\n",""]);const r=l},1379:(e,t,i)=>{i.r(t),i.d(t,{items:()=>ye});var n={};i.r(n),i.d(n,{default:()=>F,dependencies:()=>C,name:()=>R,register:()=>A,template:()=>P});var s={};i.r(s),i.d(s,{ModFilterBox:()=>q});var a={};i.r(a),i.d(a,{default:()=>U,dependencies:()=>G,name:()=>j,register:()=>_,template:()=>z});var l={};i.r(l),i.d(l,{BlockFilter:()=>Q,ModFilter:()=>Y,filter:()=>J});var r={};i.r(r),i.d(r,{default:()=>le,dependencies:()=>re,name:()=>se,register:()=>de,template:()=>ae});var o={};i.r(o),i.d(o,{itemsheet:()=>he});var d={};i.r(d),i.d(d,{default:()=>me,dependencies:()=>be,name:()=>ue,register:()=>ve,template:()=>fe});var c=i(655),p=(i(1932),i(1542)),h=i(3379),u=i.n(h),f=i(7795),m=i.n(f),b=i(569),g=i.n(b),v=i(3565),y=i.n(v),x=i(9216),I=i.n(x),k=i(4589),T=i.n(k),w=i(3368),$={};$.styleTagTransform=T(),$.setAttributes=y(),$.insert=g().bind(null,"head"),$.domAPI=m(),$.insertStyleElement=I(),u()(w.Z,$),w.Z&&w.Z.locals&&w.Z.locals;var S=i(7958),M={};M.styleTagTransform=T(),M.setAttributes=y(),M.insert=g().bind(null,"head"),M.domAPI=m(),M.insertStyleElement=I(),u()(S.Z,M),S.Z&&S.Z.locals&&S.Z.locals;var E=i(8247),Z={};Z.styleTagTransform=T(),Z.setAttributes=y(),Z.insert=g().bind(null,"head"),Z.domAPI=m(),Z.insertStyleElement=I(),u()(E.Z,Z),E.Z&&E.Z.locals&&E.Z.locals;const R="modfilterbox",P='<div class="mod d-flex align-items-center" >\n    \x3c!-- checkbox --\x3e\n    <input class="checkbox mr-1" type="checkbox" checked.bind="data.activate" />\n    \x3c!-- mod select --\x3e\n    <div name="modsearch" class="searchable">\n\n        \x3c!-- input + text over --\x3e\n        <div class="modsearchinput">\n            <input name="modsearchinput" type="text" autocomplete="off" \n            ref="inputHtml"\n            value.bind="inputText" \n            onkeyup.call="onKeyup($event)" onkeydown.call="onKeyDown($event)"\n            onfocus.call="onFocus($event)" onblur.call="onBlur($event)"\n            >\n            <label if.bind="!selectedMod && !inputText" class="inputPlaceholder" t="quickfus.filter.addMod"></label>\n            <label if.bind="selectedMod && !inputText" class="inputOverlay" for="modsearchinput" \n                innerHtml.bind="renderCharac(selectedMod, true)">\n            </label>\n        </div>\n        \x3c!-- <button>${outputText}</button> --\x3e\n\n        \x3c!-- list of options --\x3e\n        \x3c!--  if.bind="!listHidden" --\x3e\n        <dl name="modsearchlist" class="modlist" style="display: none;" ref="modList">\n            \x3c!-- automatically filled with mods --\x3e\n            <section repeat.for="[sectionName, section] of filteredSects">\n                \x3c!-- name: ${sectionName} --\x3e\n                <dt t.bind="sectionName" style="text-align: center;"></dt>\n                \x3c!-- getModsForSection(section) --\x3e\n                <dd repeat.for="mod of section" \n                    style="padding-left: 10px;" class="${mod == selectedMod ? \'selected\' : \'\'}"\n                    title="${mod.id}"\n                    innerHtml.bind="renderCharac(mod)"\n                    onmouseover.call="onHoverMod(mod)"\n                    onclick.call="onClickMod(mod)"\n                    >\n                </dd>\n            </section>\n        </dl>\n\n    </div>\n    \x3c!-- mod min/max --\x3e\n    <input class="ml-2 mr-2" type="number" value.bind="data.min" placeholder="min" />\n    <input class="mr-2" type="number" value.bind="data.max" placeholder="max" />\n    \x3c!-- mod delete --\x3e\n    <button class="btnDelete" onclick.call="onDelete()">x</button>\n</div>\n\n\x3c!-- <div if.bind="filteredSects">\n    allo\n    <div repeat.for="[sectionName, section] of filteredSects">\n        ${sectionName}  - ${section}\n    </div>\n</div> --\x3e\n\x3c!--\n<div class="combobox">\n\t<input type="text" [(ngModel)]="inputItem" (ngModelChange)="getFilteredList()" class="combobox-input" \n    (keyup)="onKeyPress($event)" (blur)="toggleListDisplay(0)" (focus)="toggleListDisplay(1)" \n    placeholder="Select one..." [ngClass]="{\'error\': showError}">\n  <span *ngIf="showError" class="error-text"><i>Invalid Selection.</i></span>\n  <div class="combobox-options" *ngIf="!listHidden">\n    <list-item *ngFor="let item of filteredList;let i = index" (click)="selectItem(i)" \n        [ngClass]="{\'selected\': i===selectedIndex}">{{item}}\n    </list-item>\n  </div>\n</div>\n--\x3e\n',F=P,C=[];let L;function A(e){L||(L=p.b_N.define({name:R,template:P,dependencies:C})),e.register(L)}var X=i(5385),O=i(9344),W=i(7302),N=i(8668),H=i(8751);class B{constructor(){this.fulldata=[],this.data=[],this.page=0,this.itemsPerPage=50}showMore(){let e=this.page*this.itemsPerPage,t=this.fulldata.slice(e,this.itemsPerPage+e);this.data.push(...t),this.page++}reloadMsnry(){this.msnry&&(this.msnry.reloadItems(),this.msnry.layout())}initMasonry(){console.log("mason init grid: "+this.obj.grid),this.obj.grid&&(this.msnry&&this.msnry.destroy(),this.msnry=new H(this.obj.grid,{itemSelector:".grid-item",columnWidth:".grid-item",gutter:10,fitWidth:!0}),this.msnry.layout())}}class D{static caseAndAccentInsensitive(e){const t=function(e){let t={};for(;e.length>0;){let i="["+e.shift()+"]",n=i.split("");for(;n.length>0;)t[n.shift()]=i}return t}(["aàáâãäå","cç","eèéêë","iìíîï","nñ","oòóôõöø","sß","uùúûü","yÿ"]);return function(e){var i="";if(!e)return i;e=e.toLowerCase();for(var n=0;n<e.length;n++){let s=e.charAt(n);i+=t[s]||s}return i}(e)}static debounce(e,t,i){var n;return function(){var s=this,a=arguments,l=i&&!n;clearTimeout(n),n=setTimeout((()=>{n=null,i||e.apply(s,a)}),t),l&&e.apply(s,a)}}}let q=class{constructor(e,t,i,n){this.db=e,this.emerald=t,this.i18n=i,this.ea=n,this.inputText="",this.selectedIndex=0,this.filteredSects=new Map;for(let e of this.getStatSections())this.filteredSects.set(e[0],this.getModsForSection(e[1]))}onKeyup(e){this.filterList()}onKeyDown(e){"Escape"===e.key&&(this.selectedIndex=0,this.inputText="",this.inputHtml.blur()),"Enter"===e.key&&(this.selectedMod=this.getModAtIndex(this.selectedIndex),this.onClickMod(this.selectedMod)),"ArrowDown"===e.key?(this.selectedIndex++,this.selectedIndex>=this.filteredSize()&&(this.selectedIndex=0),this.selectedMod=this.getModAtIndex(this.selectedIndex)):"ArrowUp"===e.key&&(this.selectedIndex--,this.selectedIndex<0&&(this.selectedIndex=this.filteredSize()-1),this.selectedMod=this.getModAtIndex(this.selectedIndex)),this.scrollToSelected()}onFocus(e){this.inputText="",this.filterList(),this.toggleListVisibility(!0)}onBlur(e){this.toggleListVisibility(!1)}onDelete(){this.ea.publish("quickfus:mod:delete",this)}onClickMod(e){var t;this.selectedMod=e,this.data.pseudoName=null!==(t=this.selectedMod.name)&&void 0!==t?t:"",this.data.effectId=this.selectedMod.id,this.inputText="",this.inputHtml.blur()}onHoverMod(e){this.selectedMod=e}toggleListVisibility(e){if(e)this.modList.style.display="block";else{let e=this.modList;setTimeout((function(){e.style.display="none"}),100)}}scrollToSelected(){if(!this.selectedMod)return;let e=this.selectedMod.id;for(let t of this.modList.children)for(let i of t.children)if(i.getAttribute("title")==e.toString()){i.scrollIntoView({behavior:"auto",block:"nearest",inline:"nearest"});break}}filterList(){let e=new RegExp(D.caseAndAccentInsensitive(this.inputText),"i");if(""!==this.inputText){this.filteredSects.clear();for(let t of this.getStatSections()){let i=this.i18n.tr(t[0]);if(e.test(i))this.filteredSects.set(t[0],this.getModsForSection(t[1]));else{let i=this.getModsForSection(t[1]);this.filteredSects.set(t[0],i.filter((t=>e.test(this.getModName(t)))))}}}else{this.filteredSects.clear();for(let e of this.getStatSections())this.filteredSects.set(e[0],this.getModsForSection(e[1]))}}getModName(e){return e.nameId?this.getI18n(e.nameId):e.name?this.i18n.tr("quickfus.filter.pseudo."+e.name):void 0}getModAtIndex(e){let t=0;for(let i of this.filteredSects)for(let n of i[1]){if(t==e)return n;t++}return null}filteredSize(){let e=0;for(let t of this.filteredSects)e+=this.filteredSects.get(t[0]).length;return e}renderCharac(e,t){var i;let n=this.getModName(e),s="";e.asset&&(s="background: transparent url('"+this.db.commonUrlPath+"characteristics/"+(null===(i=e.asset)||void 0===i?void 0:i.replace("tx_",""))+".png');background-size: contain; background-repeat: no-repeat;width: 22px; height: 22px; margin-right: 5px;");let a="";if(t){let e=this.selectedMod.categoryId-1;e<0&&(e=0);let t=Array.from(W.db.getStatSections().keys())[e];a="<div style='margin-right: 5px;'>["+this.i18n.tr(t)+"]</div>"}return`\n            <div class="d-flex">\n                ${a}\n                <div style="${s}"></div>\n                <div>${n}</div>\n            </div>\n        `}getStatSections(){return W.db.getStatSections()}getModsForSection(e){return 0==e?this.db.pseudoCharacs:this.emerald.characteristics.filter((t=>t.categoryId==e)).sort(((e,t)=>e.order-t.order))}getI18n(e){return this.db.getI18n(e.toString())}};q=(0,c.gn)([(0,p.MoW)(n),(0,c.fM)(2,X.mb),(0,c.fM)(3,O.Rp),(0,c.w6)("design:paramtypes",[W.db,N.B,Object,Object])],q);const j="filter",z='\n\n\n\n\x3c!-- Search --\x3e\n<div class="row">\n    <input class="search" type="text" value.bind="filterText" placeholder="search..." focus="true" />\n</div>\n\n\x3c!-- tagify search box ? = search sur item names, panoplies, effets, types d\'items (capecoiffe..).... --\x3e\n\x3c!-- exemple tu clic sur [() Agilité ] et ça remplace le text par 2 box min/max à côté de l\'icône d\'agi --\x3e\n\n<div class="row" if.bind="db.isLoaded && emerald.items && emerald.characteristics">\n    \x3c!--Generic filters left side --\x3e\n    <div class="leftside col">\n\n        \x3c!-- Level --\x3e\n        <div class="d-flex align-items-center">\n            <input class="checkbox mr-1" type="checkbox" id="level" checked.bind="filterLevel" />\n            <label class="title mr-auto" for="level" t="quickfus.filter.level"></label>\n            <input class="mr-2" type="number" value.bind="levelMin" placeholder="min" />\n            <input class="" type="number" value.bind="levelMax" placeholder="max" />\n        </div>\n\n        \x3c!-- Types base --\x3e\n        <input class="checkbox" type="checkbox" id="type" checked.bind="filterType" onclick.call="filterTypeClicked()" />\n        <label class="title" for="type" t="quickfus.filter.type"></label>\n        <div class="d-flex flex-wrap">\n            <div repeat.for="[type, value] of types" class="toggle ${value ? \'styleChecked\' : \'styleUnchecked\'}" onclick.call="checkType(type)">\n                \x3c!-- <input type="checkbox" id="${type}" value="type" checked /> --\x3e\n                <label for="${type}" innerHTML.bind="type"></label>\n            </div>\n        </div>\n\n        \x3c!-- Types weapons --\x3e\n        <input class="checkbox" type="checkbox" id="armes" checked.bind="filterWeapon" onclick.call="filterWeaponClicked()" />\n        <label class="title" for="armes" t="quickfus.filter.weapons"></label>\n        <div class="d-flex flex-wrap">\n            <div repeat.for="[arme, value] of armes" class="toggle ${value ? \'styleChecked\' : \'styleUnchecked\'}" onclick.call="checkWeapon(arme)">\n                \x3c!-- <input type="checkbox" id="${arme}" value="arme" checked /> --\x3e\n                <label for="${arme}" innerHTML.bind="arme"></label>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- Mods --\x3e\n    <div class="rightside col">\n        \x3c!-- Mods --\x3e\n        <input class="checkbox" type="checkbox" id="mods" checked />\n        <label class="title" for="mods" t="quickfus.filter.mods"></label>\n        <div class="blocklist" ref="blocklist">\n            \x3c!-- block list  --\x3e\n            <div class="block" repeat.for="i of blocks.length" id.bind="i">\n                \x3c!-- block properties --\x3e\n                <div class="d-flex align-items-center">\n                    <input class="checkbox mr-1" type="checkbox" id="${i}" checked.bind="blocks[i].activate" />\n                    <select class="mr-auto blocktitle" name="type" value.bind="blocks[i].type">\n                        <option value="$and" t="quickfus.filter.and"></option>\n                        <option value="$or"  t="quickfus.filter.or"></option>\n                        <option value="$nor" t="quickfus.filter.nor"></option>\n                        <option value="$sum" t="quickfus.filter.sum"></option>\n                    </select>\n                    <button class="btnDelete" onclick.call="deleteBlock(i)">x</button>\n                </div>\n\n                \x3c!-- mod list --\x3e\n                <modfilterbox repeat.for="mod of blocks[i].mods" data.bind="mod"></modfilterbox>\n\n                \x3c!-- create mod --\x3e\n                <div>\n                    <button class="btnAdd" click.delegate="addStatMod($this, $event, i)" t="quickfus.filter.addMod"></button>\n                    <div name="modsearch" class="searchable">\n                        <dl name="modsearchlist" class="modlist">\n                            <section repeat.for="[section, mods] of modsSections">\n                                <dt>${section}</dt>\n                                <dd repeat.for="modname of mods" onmouseover.call="onDDHover($this, $event, i, j, modname)" \n                                    onclick.call="onDDClick($this, $event, i, j, modname)">${modname}</dd>\n                            </section>\n                        </dl>\n                    </div>\n                </div> \x3c!-- end of create mod --\x3e\n            </div> \x3c!-- end of block list --\x3e\n\n            \x3c!-- create block --\x3e\n            <div class="block">\n                <button class="btnAdd" onclick.call="addBlock()" t="quickfus.filter.addBlock"></button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\x3c!-- Search button --\x3e\n<div class="row">\n    <button class="btnSearch" onclick.call="search()">Search</button>\n</div>\n',U=z,G=[s];let V;function _(e){V||(V=p.b_N.define({name:j,template:z,dependencies:G})),e.register(V)}const K=JSON.parse('[{"id":1,"nameId":915868,"superTypeId":1,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":2,"nameId":29699,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":3,"nameId":29686,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":4,"nameId":29703,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"T1,25,1","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":5,"nameId":29736,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":true,"gender":1,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":6,"nameId":29782,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":7,"nameId":29744,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"X1,0,25,1","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":8,"nameId":29751,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"L1,25,1","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":9,"nameId":29696,"superTypeId":3,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":10,"nameId":29712,"superTypeId":4,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":11,"nameId":29692,"superTypeId":5,"categoryId":0,"isInEncyclopedia":true,"plural":true,"gender":1,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":16,"nameId":29719,"superTypeId":10,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":17,"nameId":29710,"superTypeId":11,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":18,"nameId":29730,"superTypeId":12,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":1},{"id":19,"nameId":29717,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":20,"nameId":29748,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":21,"nameId":29805,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":22,"nameId":29732,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"U1,25,1","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":23,"nameId":29726,"superTypeId":13,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":82,"nameId":29702,"superTypeId":7,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":83,"nameId":249249,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":97,"nameId":640318,"superTypeId":27,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":99,"nameId":29801,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"P","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":114,"nameId":29691,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"P","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":121,"nameId":29777,"superTypeId":12,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":1},{"id":151,"nameId":29773,"superTypeId":13,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":300,"evolutiveTypeId":0},{"id":169,"nameId":372840,"superTypeId":23,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":196,"nameId":652610,"superTypeId":27,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":207,"nameId":760454,"superTypeId":27,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":217,"nameId":808221,"superTypeId":13,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":265,"nameId":961023,"superTypeId":13,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":2,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":267,"nameId":966415,"superTypeId":51,"categoryId":0,"isInEncyclopedia":false,"plural":false,"gender":0,"rawZone":"null","mimickable":false,"craftXpRatio":-1,"evolutiveTypeId":0},{"id":271,"nameId":969912,"superTypeId":2,"categoryId":0,"isInEncyclopedia":true,"plural":false,"gender":1,"rawZone":"L3,25,10","mimickable":true,"craftXpRatio":-1,"evolutiveTypeId":0}]');let J=class{constructor(e,t,i){var n;this.db=e,this.emerald=t,this.ea=i,this.filterText="",this.filterLevel=!0,this.levelMin=1,this.levelMax=200,this.types=new Map,this.armes=new Map,this.filterType=!0,this.filterWeapon=!0,this.blocks=[],i.subscribe("db:loaded",(()=>{K.filter((e=>2==e.superTypeId)).forEach((e=>{this.armes.set(this.db.getI18n(e.nameId+""),!0)})),K.filter((e=>2!=e.superTypeId)).forEach((e=>{this.types.set(this.db.getI18n(e.nameId+""),!0)}))})),this.addBlock(),this.loadFilter(),(null===(n=this.emerald.items)||void 0===n?void 0:n.length)>1&&this.search(),this.ea.subscribe("emerald:loaded",(()=>{this.search()})),this.ea.subscribe("quickfus:mod:delete",(e=>{let t=this.blocks[e.blockId].mods.find((t=>t.effectId==e.effectId));if(t){let i=this.blocks[e.blockId].mods.indexOf(t);this.blocks[e.blockId].mods.splice(i,1)}}))}loadFilter(){let e=localStorage.getItem("filter");if(e){let t=JSON.parse(e);this.filterLevel=t.filterLevel,this.filterText=t.filterText,this.levelMin=t.levelMin,this.levelMax=t.levelMax,this.types=new Map(t.types),this.armes=new Map(t.armes),this.filterLevel=t.filterLevel,this.filterType=t.filterType,this.filterWeapon=t.filterWeapon,this.blocks=t.blocks}}saveFilter(){let e={filterText:this.filterText,levelMin:this.levelMin,levelMax:this.levelMax,types:Array.from(this.types.entries()),armes:Array.from(this.armes.entries()),filterLevel:this.filterLevel,filterType:this.filterType,filterWeapon:this.filterWeapon,blocks:this.blocks};localStorage.setItem("filter",JSON.stringify(e))}search(){this.saveFilter(),this.ea.publish("items:search",this)}addBlock(){this.blocks.push({type:"$and",min:0,max:0,mods:[new Y],activate:!0})}filterTypeClicked(){var e=this.filterType;this.types.forEach(((t,i)=>this.types.set(i,!e)))}filterWeaponClicked(){var e=this.filterWeapon;this.armes.forEach(((t,i)=>this.armes.set(i,!e)))}checkType(e){this.types.set(e,!this.types.get(e)),this.filterType=this.hasValue(this.types,!0)}checkWeapon(e){this.armes.set(e,!this.armes.get(e)),this.filterWeapon=this.hasValue(this.armes,!0)}hasValue(e,t){for(const[i,n]of Array.from(e.entries()))if(n==t)return!0;return!1}getStatSections(){return W.db.getStatSections()}getModsForSection(e){return this.emerald.characteristics.filter((t=>t.categoryId==e)).sort(((e,t)=>e.order-t.order))}getI18n(e){return this.db.getI18n(e.toString())}};J=(0,c.gn)([(0,p.MoW)(a),(0,O.f3)(W.db),(0,c.fM)(2,O.Rp),(0,c.w6)("design:paramtypes",[W.db,N.B,Object])],J);class Q{constructor(){this.type="And",this.activate=!0,this.mods=[]}}class Y{constructor(){this.activate=!0}}var ee=i(3720),te={};te.styleTagTransform=T(),te.setAttributes=y(),te.insert=g().bind(null,"head"),te.domAPI=m(),te.insertStyleElement=I(),u()(ee.Z,te),ee.Z&&ee.Z.locals&&ee.Z.locals;var ie=i(7572),ne=i(6694);const se="itemsheet",ae='\n\n\n\n<div>\n    <div class="d-flex">\n        <img src="${itemIconUrl}"/>\n        <div>\n            ${db.getI18n(item.nameId)}\n            <br>\n            ${item.level} \n            - ${item.id}\n            \x3c!-- typeId --\x3e\n        </div>\n    </div>\n\n    \x3c!-- weapon stuff --\x3e\n    <div class="weaponConditions" if.bind="isWeapon">\n        \x3c!-- minrange, range, apCost, maxCastPerTurn, criticalHitProbability, criticalHitBonus  --\x3e\n        \x3c!-- castInDiagonal, castTestLos --\x3e\n        <div>${item.apCost}PA ${item.range}PO ${item.maxCastPerTurn}/t ${item.criticalHitProbability}% +${item.criticalHitBonus}</div>\n        <div></div>\n    </div>\n\n    \x3c!-- weapon effects --\x3e\n    <effectlist class="weaponEffects" if.bind="isWeapon" effects.bind="weaponEffects" iscrit.bind="false" depth.bind="0"></effectlist>\n\n    \x3c!-- boost effects --\x3e\n    <effectlist effects.bind="sortedEffects" iscrit.bind="false" depth.bind="0"></effectlist>\n\n    \x3c!-- conditions --\x3e\n    <div class="conditions" if.bind="hasConditions">\n        \x3c!-- "criteria": "CS>300&CI>300", --\x3e\n        ${conditionsString}\n    </div>\n\n</div>\n',le=ae,re=[ie,ne];let oe;function de(e){oe||(oe=p.b_N.define({name:se,template:ae,dependencies:re})),e.register(oe)}class ce{}class pe{static parseGroup(e){let t=[],i=this.splitParenthesises(e);for(let n of i)e=e.replace("("+n+")",""),t.push(...this.parseGroup(n));return t.push(...this.splitGroupToCriterions(e)),t}static splitGroupToCriterions(e){let t=[];for(let i of e.split(/[&|]/))t.push(this.getInfos(i));return t}static splitParenthesises(e){let t=[],i=-1;for(;(i=e.indexOf("("))>=0;){let n=e.indexOf(")"),s=e.slice(i+1,n);t.push(s),e=e.slice(n+1)}return t}static getInfos(e){var t=null;for(t in pe.OPERATORS_LIST)if(2==e.indexOf(t)){let i=new ce;return i.name=e.split(t)[0],i.operator=t,i.value=e.split(t)[1],i}}}pe.SUPERIOR=">",pe.INFERIOR="<",pe.EQUAL="=",pe.DIFFERENT="!",pe.OPERATORS_LIST=[pe.SUPERIOR,pe.INFERIOR,pe.EQUAL,pe.DIFFERENT,"#","~","s","S","e","E","v","i","X","/"];let he=class{constructor(e,t,i){this.db=e,this.emerald=t,this.ea=i}attached(){this.ea.publish("itemsheet:loaded")}get itemIconUrl(){return this.db.gitFolderPath+"sprites/items/"+this.item.iconId+".png"}get sortedEffects(){return this.item.possibleEffects.filter((e=>!this.getEffect(e).useInFight))}getEffect(e){return this.emerald.effects.filter((t=>t.id==e.effectId))[0]}get weaponEffects(){return this.item.possibleEffects.filter((e=>this.getEffect(e).useInFight))}get isWeapon(){return this.item.apCost||this.item.maxCastPerTurn}get hasConditions(){return this.item.criteria&&"null"!=this.item.criteria}get conditionsString(){let e=pe.parseGroup(this.item.criteria);for(let t of e);return""}};(0,c.gn)([p.ExJ,(0,c.w6)("design:type",Object)],he.prototype,"item",void 0),he=(0,c.gn)([(0,p.MoW)(r),(0,O.f3)(W.db,N.B),(0,c.fM)(2,O.Rp),(0,c.w6)("design:paramtypes",[W.db,N.B,Object])],he);const ue="items",fe='\n\n\n\n\n\n\n\x3c!-- if.bind="db.isLoaded && mason.data.length != 0" --\x3e\n<filter ></filter>\n\n\x3c!-- ${mason.data.length} --\x3e\n\x3c!-- <button if.bind="mason.data.length != 0" click.delegate="search()">Search</button> --\x3e\n\n\x3c!-- spinner --\x3e\n<div if.bind="mason.data.length == 0" class="loaderContainer">\n    <div class="loader"></div>\n</div>\n\n\x3c!-- <div if.bind="db.isLoaded && isLoaded && items.length > 0"> --\x3e\n\n\n\x3c!-- <div class="d-flex"> --\x3e\n\x3c!-- <itemsheet repeat.for="item of items" item.bind="item"></itemsheet> --\x3e\n\x3c!-- </div> --\x3e\n\n<div class="grid-wrapper">\n    \x3c!--  data-masonry=\'{ "itemSelector": ".grid-item", "columnWidth": 200 }\' --\x3e\n    <div class="grid" ref="grid">\n        <itemsheet class="grid-item" repeat.for="item of mason.data" item.bind="item"></itemsheet>\n    </div>\n</div>\n\n\x3c!-- </div> --\x3e\n',me=fe,be=[l,o];let ge;function ve(e){ge||(ge=p.b_N.define({name:ue,template:fe,dependencies:be})),e.register(ge)}i(9996);let ye=class{constructor(e,t,i){this.db=e,this.emerald=t,this.ea=i,this.itemFilter=null,this.debouncedShowMore=D.debounce((()=>{this.search1()}),500,!0);let n=D.debounce((()=>{this.mason.reloadMsnry()}),200,!1);this.ea.subscribe("itemsheet:loaded",(()=>{n()})),this.ea.subscribe("items:search",(e=>this.search(e)))}isLoaded(){return this.emerald.items}attached(){this.mason=new B,this.mason.obj=this,this.mason.initMasonry(),this.pageHost=document.getElementsByClassName("page-host")[0];let e=t=>{this.grid?setTimeout((()=>this.onScroll(t))):this.pageHost.removeEventListener("scroll",e,!1)};this.pageHost.addEventListener("scroll",e)}async onScroll(e){let t=this.pageHost.clientHeight,i=this.grid.scrollHeight+this.grid.offsetTop-t,n=this.pageHost.scrollTop;Math.abs(n-i)<=15&&this.debouncedShowMore()}async search(e=null){console.log("on search: "+e),this.itemFilter=this.generateFilter(e),this.mason.data=[],this.mason.fulldata=[],this.mason.page=0,this.search1()}async search1(){var e;console.log("search1 filter: "+JSON.stringify(this.itemFilter));var t=[];t.push({$match:null!==(e=this.itemFilter)&&void 0!==e?e:""}),t.push({$sort:{level:-1,id:-1}}),t.push({$skip:this.mason.page*this.mason.itemsPerPage}),t.push({$limit:this.mason.itemsPerPage});let i=this.emerald.collectionItems.aggregate(t),n=await i.toArray();this.mason.fulldata.push(...n),this.mason.showMore()}async search0(e=""){this.mason.data=await this.emerald.collectionItems.find({}).sort({level:-1}).skip(0).limit(50).toArray()}generateFilter(e){var t={$addFields:{}},i={$and:[]},n={$or:[]};if(e.filterLevel&&(i.$and.push({level:{$gte:parseInt(e.levelMin+"")}}),i.$and.push({level:{$lte:parseInt(e.levelMax+"")}})),e.filterType&&e.types.forEach(((e,t)=>{e&&n.$or.push({type:t})})),e.filterWeapon&&e.armes.forEach(((e,t)=>{e&&n.$or.push({type:t})})),(e.filterType||e.filterWeapon)&&i.$and.push(n),e.filterText&&""!=e.filterText){let t={$regex:D.caseAndAccentInsensitive(e.filterText),$options:"gi"};"fr"==this.db.lang?i.$and.push({namefr:t}):i.$and.push({nameen:t})}return e.blocks.forEach((e=>{if(e.activate)if("$sum"==e.type)this.filterSum(i,t,0,e);else{let t=e.mods.filter((e=>e.activate&&null!=e.effectId)).map((e=>e.pseudoName.includes("Pseudo")?this.filterStatPseudo(e):this.filterStat(e)));t.length>0&&i.$and.push({[e.type]:t})}})),i}filterSum(e,t,i,n){let s=n.mods.map((e=>e.effectId)).reduce(((e,t)=>e+t))+i,a=[];n.mods.forEach((e=>{a.push({$eq:["$$stat.name",e.effectId]})})),t.$addFields[s]={$sum:{$map:{input:{$filter:{input:"$statistics",as:"stat",cond:{$or:a}}},as:"stat",in:"$$stat.max"}}},e.$and.push({[s]:{$gte:parseInt((n.mods[0].min||-1e5)+""),$lte:parseInt((n.mods[0].max||1e5)+"")}})}filterStatPseudo(e){let t=parseInt(e.min+""),i=parseInt(e.max+"");e.min||(t=-1e5);let n={$and:[]};return n.$and.push({["(Pseudo) statistics."+e.effectId]:{$gte:t}}),e.max&&n.$and.push({["(Pseudo) statistics."+e.effectId]:{$lte:i}}),n}filterStat(e){let t=parseInt(e.min+""),i=parseInt(e.max+"");e.min||(t=-1e5);let n={effectId:e.effectId,diceNum:{$gte:t}},s={effectId:e.effectId};return e.max?(n.diceSide={$lte:i},s.diceSide={$lte:i,$gte:t}):s.diceSide={$gte:t},{possibleEffects:{$elemMatch:{$or:[n,s]}}}}};ye=(0,c.gn)([(0,p.MoW)(d),(0,O.f3)(W.db,N.B),(0,c.fM)(2,O.Rp),(0,c.w6)("design:paramtypes",[W.db,N.B,Object])],ye)}}]);
"use strict";(self.webpackChunkencyclofus=self.webpackChunkencyclofus||[]).push([[674],{7674:(e,i,l)=>{l.r(i),l.d(i,{formules:()=>p});var t={};l.r(t),l.d(t,{default:()=>s,dependencies:()=>o,name:()=>r,register:()=>d,template:()=>a});var n=l(655),u=(l(1932),l(1542));const r="formules",a='<h2 id="formules">Formules</h2>\n<h3 id="tacle-fuite">Tacle, Fuite</h3>\n<ul>\n<li>10 agilité donne +1 tacle et +1 fuite</li>\n<li>Pourcentage de fuite (pa/pm restants après), arrondi à l&#39;entier = $$% Fuite = {Fuite + 2 \\over 2*(Tacle +2)}$$</li>\n<li>Fuite 100%: $$Fuite ≥ 2*Tacle + 2$$</li>\n<li>Tacle 100%: $$Tacle ≥  (Fuite+2)*PM -2$$</li>\n<li>Tacle multiple: Pourcentage fuite final = (Pourcentage fuite 1) * (Pourcentage fuite 2)</li>\n</ul>\n<h3 id="retrait-esquive">Retrait, Esquive</h3>\n<ul>\n<li>10 sagesse donne +1 retrait et +1 esquive</li>\n<li>Probabilité de retirer 1PA = $$50% * {\\text{ Retrait lanceur } \\over \\text{ esquive cible }} * {\\text{PA actuels cible } \\over \\text{PA totaux cibles}}$$</li>\n<li>Minimum 10% fixe de probabilité de retirer ou d&#39;esquiver 1 PA</li>\n<li>La probabilité est recalculée pour chaque PA individuellement.</li>\n</ul>\n<h3 id="dommages-de-poussée">Dommages de poussée</h3>\n<ul>\n<li>Une poussée impaire  en diagonale devient l&#39;entier pair supérieur (1-&gt;2, 3-&gt;4)</li>\n<li>Une poussée à travers une autre entitée est divisée par 2</li>\n<li>Dégâts = $$132 + do pou * cases / 4$$</li>\n<li>Le forgelave proc après les dégâts de poussée</li>\n</ul>\n',s=a,o=[];let c;function d(e){c||(c=u.b_N.define({name:r,template:a,dependencies:o})),e.register(c)}let p=class{};p=(0,n.gn)([(0,u.MoW)(t)],p)}}]);